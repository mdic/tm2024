Attribute name	Description
instaloader.node_type	Internal information added by Instaloader and containing the type of content the data refers to (e.g. Post)
instaloader.version	Internal information added by Instaloader and containing the software version used to collect the data
node.__typename	Internal information added by Instaloader describing the type of content the post contains; e.g. GraphSideCar indicates the content is a a set of images
node.accessibility_caption	The textual description of the content of the post, as inserted by Instagram’s visual recognition system and added for accessibility purposes
node.coauthor_producers.*	An array of JSON objects containing details about the accounts labelled as coauthors of the content. The objects have the same structure of the user’s account (node.owner.*)
node.comments_disabled	Whether the creator has disabled comments on their post or not
node.dimensions.*	Dictionary containing details about the dimensions of the media content
node.dimensions.height	Height in pixels of the media content
node.dimensions.width	Width in pixels of the media content
node.display_url	Direct link to the media content
node.edge_liked_by.*	A JSON object containing the number of likes the post has received, when the content is a picture
node.edge_liked_by.count	The number of likes the post has received, when the content is a picture
node.edge_media_preview_like.*	A JSON object containing the number of likes the post has received, when the content is a video
node.edge_media_preview_like.count	The number of likes the post has received, when the content is a video
node.edge_media_to_caption.*	A JSON object containing the caption of the post
node.edge_media_to_caption.edges.0.node.text	The textual content of the post, as inserted by the creator
node.edge_media_to_comment.*	A JSON object containing the number of comments the post has received
node.edge_media_to_comment.count	The number of comments the post has received
node.edge_media_to_tagged_user.edges.*	An array of JSON objects containing details about the users tagged in the post
node.edge_media_to_tagged_user.edges.0.node.user.followed_by_viewer	Whether the account used to collect the data follows the tagged user
node.edge_media_to_tagged_user.edges.0.node.user.full_name	Full name of the tagged user
node.edge_media_to_tagged_user.edges.0.node.user.id	Unique ID of the user tagged
node.edge_media_to_tagged_user.edges.0.node.user.is_verified	Whether the tagged user is verified or not
node.edge_media_to_tagged_user.edges.0.node.user.profile_pic_url	Direct link to the tagged user profile picture
node.edge_media_to_tagged_user.edges.0.node.user.username	Username of the tagged user
node.edge_media_to_tagged_user.edges.0.node.x	X-coordinate of the point where the tagged user is included in the media content
node.edge_media_to_tagged_user.edges.0.node.y	Y-coordinate of the point where the tagged user is included in the media content
node.edge_sidecar_to_children.edges.*	Array of JSON objects containing details about  the pictures contained in a multi-picture post. Each image contains the same attributes as the main picture (node)
node.fact_check_information	Additional information added by the fact-checking system (see description)
node.fact_check_overall_rating	Rating of the post according to the fact-checking system (see description)
node.gating_info	Whether the post is age-restricted or not
node.has_upcoming_event	Whether the user has content labelled as upcoming event
node.id	Unique ID of the content
node.is_video	Whether the content of the post is a video or not
node.location.*	A JSON object containing details about the location where the content was uploaded from, as indicated (tagged) by the user: details are included only if a location was added, otherwise the value of the object is equal to ‘null’
node.location.has_public_page	Whether the location has a public page, i.e. a profile-like page containing all the posts tagged in this location
node.location.id	The unique location ID, as assigned by Instagram
node.location.name	The plain-text human-readable name of the location, e.g. “Milan, Italy”
node.location.slug	The slug-version of the location’s name, i.e. a human-readable and clean version in lower-case letters only, with no accented characters, and hyphen used as replacement for commas and other punctuation marks. E.g. “milan-italy”
node.media_overlay_info	Details about the overlay (e.g. stickers) applied to the content
node.media_preview	BASE64 encoded version of the image preview  (see description)
node.nft_asset_info	[As of November 2022 this data-point appears to be unused]
node.owner.bio_links.*	List of strings each one representing a link – extracted from the plain text biography – appearing in the biography
node.owner.biography	Text appearing in the user biography field
node.owner.biography_with_entities.*	Array containing the entities (i.e. usernames and hashtags) included in the user account biography – one object for each entity
node.owner.biography_with_entities.entities.*	Array of JSON objects containing details about  the users included in the user account biography
node.owner.biography_with_entities.entities.0.hashtag.name	If the entity is a hashtag, it is reported in this attribute in plain text and without the # symbol
node.owner.biography_with_entities.entities.0.user.username	If the entity is a username, it is reported in this attribute in plain text and without the @ symbol
node.owner.biography_with_entities.raw_text	Raw plain-text version of the biography, same as node.owner.biography
node.owner.blocked_by_viewer	Whether the account that created the post is blocked by the account collecting the data
node.owner.business_address_json.*	If the user’s account is set to business, the business’ address is included here as a JSON object
node.owner.business_category_name	If the user’s account is set to business, the name of the category the business belongs to (set from a predefined list of items, e.g. ‘Creators & Celebrities)
node.owner.business_contact_method	If the user’s account is set to business, the preferred method set by the user to contact them (e.g. email)
node.owner.business_email	If the user’s account is set to business, the business email address
node.owner.business_phone_number	If the user’s account is set to business, the business phone number
node.owner.category_enum	The internal name of the category the user’s account belongs to (selected from a predefined list of items, e.g. PERSON)
node.owner.category_name	The full name of the category the user’s account belongs to (selected from a predefined list of items, e.g. Public figure)
node.owner.connected_fb_page	The named of the Facebook page linked to the user’s account
node.owner.country_block	Whether the post is marked as non-visibile to the account collecting the data, following the creator’s decision to block this content to users from a set of countries.
node.owner.edge_follow.count	The number of accounts followed by the user who created the post, at the time of the data collection
node.owner.edge_followed_by.count	The number of followers the account has at the time of the collection of the data
node.owner.edge_mutual_followed_by.*	An array of JSON objects containing details about the accounts that are mutually followed by both the content’s creator and the account collecting the data
node.owner.edge_mutual_followed_by.count	The number of accounts followed both by the user’s account and the account collecting the data
node.owner.edge_mutual_followed_by.edges.*	An array of JSON objects containing details about the mutually followed accounts, structured as the collected user’s account
node.owner.edge_related_profiles.*	An array of JSON objects containing details about accounts related to the user’s account according to Instagram’s algorithm.
node.owner.edge_related_profiles.edges.0.node.full_name	Full name of the account, as indicated by the user
node.owner.edge_related_profiles.edges.0.node.id	Unique ID of the account
node.owner.edge_related_profiles.edges.0.node.is_private	Whether the account is private or not
node.owner.edge_related_profiles.edges.0.node.is_verified	Whether the account is verified or not
node.owner.edge_related_profiles.edges.0.node.profile_pic_url	The direct link to the account’s profile picture
node.owner.edge_related_profiles.edges.0.node.username	The full username of the account
node.owner.external_url	External URL (i.e. non-Instagram) linked to the creator’s account
node.owner.external_url_linkshimmed	External URL (i.e. non-Instagram) linked to the creator’s account transformed using Instagram internal referral services
node.owner.fbid	The unique Facebook ID linked to the user’s Instagram account
node.owner.followed_by_viewer	Whether the account collecting the data follows the account that created the post
node.owner.follows_viewer	Whether the account follows the account that collected the data
node.owner.full_name	Full name of the account,
node.owner.guardian_id	The unique ID of the account acting as guardian of the user’s account
node.owner.has_ar_effects	Whether the account has contents where AR (Augmented Reality) effects are used (see note)
node.owner.has_blocked_viewer	Whether the user has blocked the account collecting the data
node.owner.has_channel	Whether the user has an Instagram Channel
node.owner.has_clips	Whether the user has content labelled as “clips”
node.owner.has_guides	Whether the user has content labelled as “guides”
node.owner.has_requested_viewer	Whether the user has requested to follow the account collecting the data
node.owner.hide_like_and_view_counts	Whether the number of likes and views the user has received should be shown or not (this is chosen by the user in their account’s preferences)
node.owner.highlight_reel_count	Number of Highlight Reels the user has
node.owner.id	The unique ID of the user’s account
node.owner.is_business_account	Whether the user’s account is set as a business account or not
node.owner.is_eligible_to_view_account_transparency	Whether the user’s account has been authenticated or not (see description)
node.owner.is_embeds_disabled	Whether the owner has blocked the embedding of the contents outside of Instagram
node.owner.is_guardian_of_viewer	Whether the user’s account is a guardian of another account
node.owner.is_joined_recently	Whether the user’s account has been recently created or not
node.owner.is_private	Whether the user’s account is private or not
node.owner.is_professional_account	Whether the user’s account is set as a professional account or not
node.owner.is_supervised_by_viewer	Whether the user’s account is supervised by the account collecting the data
node.owner.is_supervised_user	Whether the user’s account is supervised by a guardian or not
node.owner.is_supervision_enabled	Whether the user’s account is supervised by another account
node.owner.is_verified	Whether the user’s account is verified or not
node.owner.location_transparency_country	The label of the country (in ISO 3166-1 code) where the creator is from, as indicated by the creator themselves
node.owner.overall_category_name	The name of the category – unregarding of the business status – the user belongs to (selected from a predefined list of items)
node.owner.profile_pic_url	Direct link to the user’s profile picture in standard resolution
node.owner.profile_pic_url_hd	Direct link to the user’s profile picture in high resolution
node.owner.pronouns	The preferred pronouns as indicated by the owner of the account
node.owner.requested_by_viewer	Whether the account collecting the data has requested to follow the the user’s account
node.owner.restricted_by_viewer	Whether the account that created the post is restricted by the account collecting the data
node.owner.should_show_category	Whether the user’s account category (node.owner.category_name) should be publicly visible
node.owner.should_show_public_contacts	Whether the user’s account contacts should be publicly visible
node.owner.state_controlled_media_country	Whether the user’s account is from a country where news media are controlled by the government (see description)
node.owner.transparency_label	Label referring to the transparency measures adopted by Facebook and Instagram (see description)
node.owner.transparency_product	Details regarding the transparency measures adopted by Facebook and Instagram (see description)
node.owner.username	The username of the user’s account
node.pinned_for_users.*	An array of JSON objects containing details about users that have “pinned” (i.e. bookmarked) the content. The objects have the same structure as the user’s account (node.owner.*)
node.sensitivity_friction_info.*	A JSON object containing information as to whether the contents have been marked (either by the user or by Instagram) as ‘sensitive’
node.sharing_friction_info.*	A JSON object containing information as to whether the sharing of the post should be inhibited
node.sharing_friction_info.bloks_app_url	[Unknown: no data was found containing this value and it was not possible to determine its type nor its possible values]
node.sharing_friction_info.should_have_sharing_friction	Whether the post can be shared or not
node.shortcode	Short unique ID of the content, contained in the direct link to the post in the format https://instagram.com/p/SHORTCODE/
node.taken_at_timestamp	The timestamp indicating the date and time of publication of the content
node.thumbnail_resources.*	An array of JSON objects containing details about the different preview thumbnails automatically created by Instagram (one object for each thumbnail)
node.thumbnail_resources.0.config_height	The height (in pixels) of the preview thumbnail
node.thumbnail_resources.0.config_width	The width (in pixels) of the preview thumbnail
node.thumbnail_resources.0.src	The direct link to the preview thumbnail
node.thumbnail_src	The direct link to the post’s original content (picture or video) from which Instagram derives the preview thumbnails
node.tracking_token	A string of text representing the token (i.e. the key) used by Instagram to track internal and external interactions with the content
